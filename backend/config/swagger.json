{
    "openapi": "3.0.0",
    "info": {
      "title": "API Documentation",
      "version": "1.0.0",
      "description": "API Documentation for the BMI App"
    },
    "paths": {
      "/signup": {
        "post": {
          "summary": "Sign up a new user",
          "description": "Create a new user account",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": { "type": "string" },
                    "password": { "type": "string" },
                    "fullname": { "type": "string" },
                    "username": { "type": "string" },
                    "age": { "type": "integer" },
                    "gender": { "type": "string" },
                    "country": { "type": "string" },
                    "preferredLanguage": { "type": "string" },
                    "height": { "type": "number", "format": "float" },
                    "weight": { "type": "number", "format": "float" }
                  }
                }
              }
            }
          },
          "responses": {
            "201": { "description": "User created successfully." },
            "400": { "description": "Error creating user, Bad Request." }
          }
        }
      },
      "/login": {
        "post": {
          "summary": "Log in a user",
          "description": "Authenticate a user and return a token.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": { "type": "string" },
                    "password": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": { "description": "User logged in successfully." },
            "400": { "description": "Error logging in" },
            "401": { "description": "Unauthorized." }
          }
        }
      },
      "/refresh-token": {
        "post": {
          "summary": "Refresh the authentication token",
          "description": "Refresh the user's token if it is about to expire.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refreshToken": {
                      "type": "string",
                      "description": "The current authentication token that is about to expire."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Token refreshed successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "sessionToken": { "type": "string", "description": "The new refreshed token." }
                    }
                  }
                }
              }
            },
            "400": { "description": "Error refreshing token, Bad Request." },
            "401": { "description": "Unauthorized, invalid or expired token." }
          }
        }
      },
      "/logout": {
        "post": {
          "summary": "Logs out the user",
          "description": "Logs out the user and removes the authenticated tokens from redis",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionToken": {
                      "type": "string",
                      "description": "The user's session token"
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "The user's refresh token"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {"description": "Logged out successfully"},
            "400": { "description": "Error logging out." }
          }
        }

      }
    }
  }
  